.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.20)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Amon2::Web 3"
.TH Amon2::Web 3 "2014-04-20" "perl v5.16.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Amon2::Web \- Web Application Base.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&    package MyApp;
\&    use parent qw/Amon2/;
\&
\&    package MyApp::Web;
\&    use parent qw/MyApp Amon2::Web/;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This is a web application base class.
.SH "METHODS"
.IX Header "METHODS"
.ie n .IP """$c\->create_request()""" 4
.el .IP "\f(CW$c\->create_request()\fR" 4
.IX Item "$c->create_request()"
Create new request object from \f(CW$c\fR.
.Sp
You can override this method to change request object's class.
.ie n .IP """$c\->create_response($code, \e@headers, \e@body)""" 4
.el .IP "\f(CW$c\->create_response($code, \e@headers, \e@body)\fR" 4
.IX Item "$c->create_response($code, @headers, @body)"
Create new response object.
.Sp
You can override this method to change response object's class.
.ie n .IP """$c\->create_view()""" 4
.el .IP "\f(CW$c\->create_view()\fR" 4
.IX Item "$c->create_view()"
Create new view object. View object should have \f(CW\*(C`$view\->render(@_)\*(C'\fR method.
.Sp
You can override this method to change view object's class.
.ie n .IP """$c\->dispatch() : Plack::Response""" 4
.el .IP "\f(CW$c\->dispatch() : Plack::Response\fR" 4
.IX Item "$c->dispatch() : Plack::Response"
Do dispatch request. This method must return instance of Plack::Response.
.Sp
You can override this method to change behavior.
.ie n .IP """$c\->html_content_type() : Str""" 4
.el .IP "\f(CW$c\->html_content_type() : Str\fR" 4
.IX Item "$c->html_content_type() : Str"
Returns default Content-Type value for the \s-1HTML\s0 response.
.Sp
You can override this method to change behavior.
.ie n .IP """$c\->request() : Plack::Request""" 4
.el .IP "\f(CW$c\->request() : Plack::Request\fR" 4
.IX Item "$c->request() : Plack::Request"
.PD 0
.ie n .IP """$c\->req() : Plack::Request""" 4
.el .IP "\f(CW$c\->req() : Plack::Request\fR" 4
.IX Item "$c->req() : Plack::Request"
.PD
This is a accessor method to get the request object in this context.
.ie n .IP """$c\->redirect($location : Str, \e%parameters) : Plack::Response""" 4
.el .IP "\f(CW$c\->redirect($location : Str, \e%parameters) : Plack::Response\fR" 4
.IX Item "$c->redirect($location : Str, %parameters) : Plack::Response"
Create a response object to redirect for \f(CW $location \fR with \f(CW\*(C`\e%parameters\*(C'\fR.
.Sp
.Vb 1
\&    $c\->redirect(\*(Aq/foo\*(Aq, +{bar => 3})
.Ve
.Sp
is same as following(if base \s-1URL\s0 is http://localhost:5000/)
.Sp
.Vb 1
\&    $c\->create_response(302, [Location => \*(Aqhttp://localhost:5000/foo?bar=3\*(Aq])
.Ve
.ie n .IP """$c\->res_403()""" 4
.el .IP "\f(CW$c\->res_403()\fR" 4
.IX Item "$c->res_403()"
Create new response object which has 403 status code.
.ie n .IP """$c\->res_404()""" 4
.el .IP "\f(CW$c\->res_404()\fR" 4
.IX Item "$c->res_404()"
Create new response object which has 404 status code.
.ie n .IP """$c\->res_405()""" 4
.el .IP "\f(CW$c\->res_405()\fR" 4
.IX Item "$c->res_405()"
Create new response object which has 405 status code.
.ie n .IP """$c\->create_simple_status_page($code, $message)""" 4
.el .IP "\f(CW$c\->create_simple_status_page($code, $message)\fR" 4
.IX Item "$c->create_simple_status_page($code, $message)"
Create a new response object which represents specified status code.
.ie n .IP """MyApp\->to_app() : CodeRef""" 4
.el .IP "\f(CWMyApp\->to_app() : CodeRef\fR" 4
.IX Item "MyApp->to_app() : CodeRef"
Create an instance of \s-1PSGI\s0 application.
.ie n .IP """$c\->uri_for($path: Str, \e%args) : Str""" 4
.el .IP "\f(CW$c\->uri_for($path: Str, \e%args) : Str\fR" 4
.IX Item "$c->uri_for($path: Str, %args) : Str"
Create \s-1URI\s0 from \f(CW$path\fR and \f(CW\*(C`\e%args\*(C'\fR.
.Sp
This method returns relative \s-1URI\s0.
.ie n .IP """$c\->render($tmpl[, @args|%args]) : Plack::Web::Response""" 4
.el .IP "\f(CW$c\->render($tmpl[, @args|%args]) : Plack::Web::Response\fR" 4
.IX Item "$c->render($tmpl[, @args|%args]) : Plack::Web::Response"
This method renders \s-1HTML\s0.
.ie n .IP """$c\->encoding()""" 4
.el .IP "\f(CW$c\->encoding()\fR" 4
.IX Item "$c->encoding()"
Return a encoding object using \f(CW\*(C`Encode::find_encoding()\*(C'\fR.
.Sp
You can override this method to change behavior.
.ie n .IP """$c\->encode_html($html) : Str""" 4
.el .IP "\f(CW$c\->encode_html($html) : Str\fR" 4
.IX Item "$c->encode_html($html) : Str"
This method encodes \s-1HTML\s0 from bytes.
.Sp
You can override this method to change behavior.
