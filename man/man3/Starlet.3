.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.20)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Starlet 3"
.TH Starlet 3 "2014-04-11" "perl v5.16.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Starlet \- a simple, high\-performance PSGI/Plack HTTP server
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  % start_server \-\-port=80 \-\- plackup \-s Starlet [options] your\-app.psgi
\&
\&  or if you do not need hot deploy,
\&
\&  % plackup \-s Starlet \-\-port=80 [options] your\-app.psgi
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Starlet is a standalone \s-1HTTP/1\s0.1 web server, formerly known as Plack::Server::Standalone::Prefork and Plack::Server::Standalone::Prefork::Server::Starter.
.PP
The server supports following features, and is suitable for running \s-1HTTP\s0 application servers behind a reverse proxy.
.PP
\&\- prefork and graceful shutdown using Parallel::Prefork
.PP
\&\- hot deploy using Server::Starter
.PP
\&\- fast \s-1HTTP\s0 processing using HTTP::Parser::XS (optional)
.SH "COMMAND LINE OPTIONS"
.IX Header "COMMAND LINE OPTIONS"
In addition to the options supported by plackup, Starlet accepts following options(s).
.SS "\-\-max\-workers=#"
.IX Subsection "--max-workers=#"
number of worker processes (default: 10)
.SS "\-\-timeout=#"
.IX Subsection "--timeout=#"
seconds until timeout (default: 300)
.SS "\-\-keepalive\-timeout=#"
.IX Subsection "--keepalive-timeout=#"
timeout for persistent connections (default: 2)
.SS "\-\-max\-keepalive\-reqs=#"
.IX Subsection "--max-keepalive-reqs=#"
max. number of requests allowed per single persistent connection.  If set to one, persistent connections are disabled (default: 1)
.SS "\-\-max\-reqs\-per\-child=#"
.IX Subsection "--max-reqs-per-child=#"
max. number of requests to be handled before a worker process exits (default: 100)
.SS "\-\-min\-reqs\-per\-child=#"
.IX Subsection "--min-reqs-per-child=#"
if set, randomizes the number of requests handled by a single worker process between the value and that supplied by \f(CW\*(C`\-\-max\-reqs\-per\-chlid\*(C'\fR (default: none)
.SS "\-\-spawn\-interval=#"
.IX Subsection "--spawn-interval=#"
if set, worker processes will not be spawned more than once than every given seconds.  Also, when \s-1SIGHUP\s0 is being received, no more than one worker processes will be collected every given seconds.  This feature is useful for doing a \*(L"slow-restart\*(R".  See http://blog.kazuhooku.com/2011/04/web\-serverstarter\-parallelprefork.html for more information. (dedault: none)
.SH "NOTES"
.IX Header "NOTES"
Starlet is designed and implemented to be simple, secure and fast, especially for running as a \s-1HTTP\s0 application server running behind a reverse proxy.  It only depends on a minimal number of well-designed (and well-focused) modules.
.PP
On the other hand if you are looking for a standalone preforking \s-1HTTP\s0 server that receives \s-1HTTP\s0 requests directly from the Internet, then you should look at Starman.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Parallel::Prefork
Starman
Server::Starter
.SH "AUTHOR"
.IX Header "AUTHOR"
Kazuho Oku
.PP
miyagawa
.PP
kazeburo
.PP
Tomohiro Takezawa
.SH "LICENSE"
.IX Header "LICENSE"
This program is free software; you can redistribute it and/or modify it under the same terms as Perl itself.
.PP
See <http://www.perl.com/perl/misc/Artistic.html>
