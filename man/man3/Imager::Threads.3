.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.20)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Imager::Threads 3"
.TH Imager::Threads 3 "2013-06-10" "perl v5.16.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Imager::Threads \- Imager and threads
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 3
\&  use Imager;
\&  use threads;
\&  Imager\->preload;
\&
\&  threads\->create(...);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Starting from version 0.94 Imager attempts to work safely with perl's
\&\f(CW\*(C`ithreads\*(C'\fR.
.PP
Previous versions stored some state in global variables, in particular
the internal error stack.
.PP
However there are some limitations:
.IP "\(bu" 4
Imager's debug malloc isn't thread safe and will never be.  Imager's
debug malloc is disabled by default.
.IP "\(bu" 4
\&\f(CW\*(C`libtiff\*(C'\fR, which Imager uses for \s-1TIFF\s0 file support is not thread
safe, \f(CW\*(C`Imager::File::TIFF\*(C'\fR works around this by single-threading its
access to \f(CW\*(C`libtiff\*(C'\fR.
.IP "\(bu" 4
\&\f(CW\*(C`giflib\*(C'\fR, which Imager uses for \s-1GIF\s0 support is not thread safe before
version 5.  \f(CW\*(C`Imager::File::GIF\*(C'\fR works around this by single threading
its access to \f(CW\*(C`giflib\*(C'\fR.
.IP "\(bu" 4
\&\f(CW\*(C`T1Lib\*(C'\fR, used by one of Imager's font drivers, is not thread safe.
\&\f(CW\*(C`Imager::Font::T1\*(C'\fR works around this by single threading access.
.IP "\(bu" 4
killing a thread reading or writing \s-1TIFF\s0 or \s-1GIF\s0 files, or using T1
fonts through \f(CW\*(C`Imager::Font::T1\*(C'\fR may deadlock other threads when they
attempt to read or write \s-1TIFF\s0 or \s-1GIF\s0 files, or work with Type 1 fonts.
.IP "\(bu" 4
Fill, font, color or I/O layer objects created in one thread are not
valid for use in child threads.  If you manage to duplicate such an
object in another thread, you get to keep both pieces when it breaks.
.PP
Note that if you have another module using \f(CW\*(C`libtiff\*(C'\fR, \f(CW\*(C`giflib\*(C'\fR or
\&\f(CW\*(C`t1lib\*(C'\fR it may interact with Imager's use of those libraries in a
threaded environment, since there's no way to co-ordinate access to
the global information \f(CW\*(C`libtiff\*(C'\fR, \f(CW\*(C`giflib\*(C'\fR and \f(CW\*(C`t1lib\*(C'\fR maintain.
.PP
Imager currently doesn't use threads itself, except for testing its
threads support.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Imager, \f(CW\*(C`threads\*(C'\fR
.SH "AUTHOR"
.IX Header "AUTHOR"
Tony Cook <tony@cpan.org>
